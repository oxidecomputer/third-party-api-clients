{
  "openapi": "3.0.0",
  "info": {
    "title": "Ramp developer",
    "version": "1.0",
    "description": "Ramp's developer API makes it easier for companies to programmatically set up and manage their card program.\n\nIt provides the ability to automate card issuing and the ability to integrate features like reporting with other software platforms.",
    "termsOfService": "https://ramp.com/developer-agreement"
  },
  "servers": [
    {
      "url": "https://api.ramp.com/developer/v1"
    }
  ],
  "paths": {
    "/users/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get User Info by User ID",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Ramp User",
                  "type": "object",
                  "title": "User",
                  "x-examples": {
                    "example-1": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "email": "user@example.com",
                      "first_name": "string",
                      "last_name": "string",
                      "role": "BUSINESS_ADMIN",
                      "phone": "string",
                      "deleted": true,
                      "location_id": null,
                      "department_id": null,
                      "manager_id": null,
                      "business_id": "f59fcbb7-848d-4242-af07-a8bb7e3ab37c"
                    }
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "email": {
                      "type": "string",
                      "minLength": 1,
                      "format": "email"
                    },
                    "first_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "last_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "role": {
                      "type": "string",
                      "minLength": 1,
                      "enum": [
                        "BUSINESS_ADMIN",
                        "BUSINESS_USER",
                        "BUSINESS_OWNER",
                        "BUSINESS_BOOKKEEPER"
                      ]
                    },
                    "phone": {
                      "type": "string",
                      "minLength": 1
                    },
                    "amount_limit": {
                      "type": "string"
                    },
                    "location_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "department_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "manager_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "business_id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "role",
                    "phone",
                    "amount_limit"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-users-userId",
        "description": "Retrieve the information of the user with the matching user ID.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "users:read"
            ]
          }
        ]
      },
      "patch": {
        "summary": "Modify Existing User",
        "operationId": "patch-users-id",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Unprocessable Entity (WebDAV)"
          }
        },
        "description": "Modify information about a user.",
        "security": [
          {
            "OAuth 2.0": [
              "users:write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role": {
                    "type": "string",
                    "enum": [
                      "BUSINESS_USER",
                      "BUSINESS_BOOKKEEPER",
                      "BUSINESS_ADMIN",
                      "BUSINESS_OWNER"
                    ]
                  },
                  "department_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "location_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "direct_manager_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      },
      "delete": {
        "summary": "Suspend a user",
        "operationId": "delete-users-id",
        "responses": {
          "204": {
            "description": "No Content"
          }
        },
        "description": "Suspends a user. Does not delete the user's cards. Currently this action is not reversible.",
        "security": [
          {
            "OAuth 2.0": [
              "users:write"
            ]
          }
        ],
        "tags": [
          "User"
        ]
      }
    },
    "/transactions": {
      "get": {
        "summary": "List transactions",
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "object",
                      "properties": {
                        "next": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "Ramp transaction",
                        "type": "object",
                        "x-examples": {
                          "example-1": {
                            "amount": 0,
                            "card_holder": {
                              "location_name": "string",
                              "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
                              "department_name": "string",
                              "department_id": "094fb5f1-8160-46ea-8cec-010c4b44e054",
                              "first_name": "string",
                              "last_name": "string"
                            },
                            "card_id": "66f6e46c-f6a1-4af8-a1bd-49666bc01304",
                            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "merchant_id": 0,
                            "merchant_name": "string",
                            "sk_category_id": 0,
                            "sk_category_name": "string",
                            "state": "string",
                            "user_transaction_time": "2019-08-24T14:15:22Z",
                            "receipts": [
                              "66f6e46c-f6a1-4af8-a1bd-49666bcXXXXX"
                            ],
                            "policy_violations": [
                              {
                                "created_at": "2019-08-28T14:15:22Z",
                                "type": "POLICY_VIOLATION_FROM_USER",
                                "id": "66f67777-f6a1-4af8-XXXX-49666bcXXXXX",
                                "memo": "Sorry! This is a personal charge."
                              }
                            ],
                            "disputes": [
                              {
                                "created_at": "2019-08-28T14:15:22Z",
                                "type": "MERCHANT_ERROR",
                                "id": "66f6e46c-f6a1-4af8-XXXX-49666bcXXXXX",
                                "memo": "Order was canceled."
                              },
                              {
                                "created_at": "2019-08-29T16:16:26Z",
                                "type": "DISPUTE_CANCELLED",
                                "id": "66666666-f6a1-4af8-XXXX-49666bcXXXXX",
                                "memo": null
                              }
                            ],
                            "accounting_categories": [
                              {
                                "category_id": "123",
                                "category_name": "Office supplies"
                              }
                            ],
                            "memo": "string"
                          }
                        },
                        "x-tags": [
                          "Transaction"
                        ],
                        "title": "Transaction",
                        "examples": [
                          {
                            "amount": 0,
                            "cardholder": {
                              "location_name": "string",
                              "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
                              "department_name": "string",
                              "department_id": "094fb5f1-8160-46ea-8cec-010c4b44e054",
                              "first_name": "string",
                              "last_name": "string"
                            },
                            "card_id": "66f6e46c-f6a1-4af8-a1bd-49666bc01304",
                            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "merchant_id": "500924a8-3f5e-4c00-beb8-2efcde988aea",
                            "merchant_name": "string",
                            "sk_category_id": 0,
                            "sk_category_name": "string",
                            "state": "string",
                            "user_transaction_time": "2019-08-24T14:15:22Z",
                            "receipts": [
                              "66f6e46c-f6a1-4af8-a1bd-49666bcXXXXX"
                            ],
                            "policy_violations": [
                              {
                                "created_at": "2019-08-28T14:15:22Z",
                                "type": "POLICY_VIOLATION_FROM_USER",
                                "id": "66f67777-f6a1-4af8-XXXX-49666bcXXXXX",
                                "memo": "Sorry! This is a personal charge."
                              }
                            ],
                            "disputes": [
                              {
                                "created_at": "2019-08-28T14:15:22Z",
                                "type": "MERCHANT_ERROR",
                                "id": "66f6e46c-f6a1-4af8-XXXX-49666bcXXXXX",
                                "memo": "Order was canceled."
                              },
                              {
                                "created_at": "2019-08-29T16:16:26Z",
                                "type": "DISPUTE_CANCELLED",
                                "id": "66666666-f6a1-4af8-XXXX-49666bcXXXXX",
                                "memo": null
                              }
                            ],
                            "accounting_categories": [
                              {
                                "category_id": "123",
                                "category_name": "Office supplies"
                              }
                            ]
                          }
                        ],
                        "properties": {
                          "amount": {
                            "type": "number"
                          },
                          "card_holder": {
                            "type": "object",
                            "required": [
                              "location_name",
                              "location_id",
                              "department_name",
                              "department_id",
                              "first_name",
                              "last_name"
                            ],
                            "properties": {
                              "location_name": {
                                "type": "string",
                                "minLength": 1
                              },
                              "location_id": {
                                "type": "string",
                                "minLength": 1,
                                "format": "uuid"
                              },
                              "department_name": {
                                "type": "string",
                                "minLength": 1
                              },
                              "department_id": {
                                "type": "string",
                                "minLength": 1,
                                "format": "uuid"
                              },
                              "first_name": {
                                "type": "string",
                                "minLength": 1
                              },
                              "last_name": {
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          },
                          "card_id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "merchant_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "merchant_name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "sk_category_id": {
                            "type": "number"
                          },
                          "sk_category_name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "state": {
                            "type": "string",
                            "minLength": 1
                          },
                          "user_transaction_time": {
                            "type": "string",
                            "minLength": 1,
                            "format": "date-time"
                          },
                          "receipts": {
                            "description": "Receipts listed in ascending order by their creation time, related to the transaction.",
                            "type": "array",
                            "items": {
                              "type": "string",
                              "minLength": 1,
                              "format": "uuid"
                            }
                          },
                          "memo": {
                            "type": "string"
                          },
                          "accounting_categories": {
                            "description": "Accounting categories related to the transaction.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "category_id": {
                                  "type": "string"
                                },
                                "category_name": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "policy_violations": {
                            "description": "Policy violations listed in descending order by their creation time, related to the transaction.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "POLICY_VIOLATION_FROM_ADMIN",
                                    "POLICY_VIOLATION_FROM_USER"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "memo": {
                                  "type": "string",
                                  "description": "Free form text regarding the policy violation."
                                }
                              }
                            }
                          },
                          "disputes": {
                            "description": "Disputes listed in descending order by their creation time, related to the transaction.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "created_at": {
                                  "type": "string",
                                  "format": "date-time"
                                },
                                "type": {
                                  "type": "string",
                                  "enum": [
                                    "MERCHANT_ERROR",
                                    "UNRECOGNIZED_CHARGE",
                                    "DISPUTE_CANCELLED",
                                    "UNKNOWN"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "format": "uuid"
                                },
                                "memo": {
                                  "type": "string",
                                  "description": "Free form text provided by the dispute initiator."
                                }
                              }
                            }
                          }
                        },
                        "required": [
                          "amount",
                          "card_holder",
                          "card_id",
                          "id",
                          "merchant_id",
                          "merchant_name",
                          "sk_category_id",
                          "sk_category_name",
                          "state",
                          "user_transaction_time"
                        ]
                      }
                    }
                  }
                },
                "examples": {}
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-transaction",
        "description": "Retrieves all transactions for the business. This endpoint supports filtering and ordering. NOTE: only one ordering param is supported.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "department_id"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "location_id"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "from_date"
          },
          {
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "name": "to_date"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "merchant_id"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "sk_category_id"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "order_by_date_desc"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "order_by_date_asc"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "order_by_amount_desc"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "order_by_amount_asc"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "state"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "min_amount"
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "max_amount"
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "The number of results to be returned in each page. The value must be between 2 and 10,000. If not specified, the default will be 1,000."
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "requires_memo",
            "description": "Filters for transactions which require a memo, but do not have one. This can only be set to true."
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "transactions:read"
            ]
          }
        ]
      },
      "parameters": []
    },
    "/locations": {
      "get": {
        "summary": "List locations",
        "tags": [
          "Location"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "object",
                      "properties": {
                        "next": {
                          "type": "string"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Location",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "x-tags": [
                          "Location"
                        ],
                        "description": "Ramp location"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-location",
        "description": "Retrieves all locations for your business.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "The number of results to be returned in each page. The value must be between 2 and 10,000. If not specified, the default will be 1,000."
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "locations:read"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create new location",
        "operationId": "post-location",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Location",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-tags": [
                    "Location"
                  ],
                  "description": "Ramp location"
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Creates a new location for the business. ",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "description": "",
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {}
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "tags": [
          "Location"
        ],
        "security": [
          {
            "OAuth 2.0": [
              "locations:write"
            ]
          }
        ]
      },
      "parameters": []
    },
    "/users": {
      "get": {
        "summary": "List users",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "object",
                      "required": [
                        "next"
                      ],
                      "properties": {
                        "next": {
                          "type": "string",
                          "minLength": 1,
                          "format": "uri"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "description": "Ramp User",
                        "type": "object",
                        "title": "User",
                        "x-examples": {
                          "example-1": {
                            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "email": "user@example.com",
                            "first_name": "string",
                            "last_name": "string",
                            "role": "BUSINESS_ADMIN",
                            "phone": "string",
                            "deleted": true,
                            "location_id": null,
                            "department_id": null,
                            "manager_id": null,
                            "business_id": "f59fcbb7-848d-4242-af07-a8bb7e3ab37c"
                          }
                        },
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "email": {
                            "type": "string",
                            "minLength": 1,
                            "format": "email"
                          },
                          "first_name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "last_name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "role": {
                            "type": "string",
                            "minLength": 1,
                            "enum": [
                              "BUSINESS_ADMIN",
                              "BUSINESS_USER",
                              "BUSINESS_OWNER",
                              "BUSINESS_BOOKKEEPER"
                            ]
                          },
                          "phone": {
                            "type": "string",
                            "minLength": 1
                          },
                          "amount_limit": {
                            "type": "string"
                          },
                          "location_id": {
                            "type": "string",
                            "nullable": true,
                            "format": "uuid"
                          },
                          "department_id": {
                            "type": "string",
                            "nullable": true,
                            "format": "uuid"
                          },
                          "manager_id": {
                            "type": "string",
                            "nullable": true,
                            "format": "uuid"
                          },
                          "business_id": {
                            "type": "string",
                            "format": "uuid"
                          }
                        },
                        "required": [
                          "id",
                          "email",
                          "first_name",
                          "last_name",
                          "role",
                          "phone",
                          "amount_limit"
                        ]
                      }
                    }
                  },
                  "required": [
                    "page",
                    "data"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-users",
        "description": "Retrieve all users of the business. ",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "The number of results to be returned in each page. The value must be between 2 and 10,000. If not specified, the default will be 1,000."
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "department_id"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "location_id"
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "users:read"
            ]
          }
        ]
      },
      "parameters": []
    },
    "/locations/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "GET a location",
        "tags": [
          "Location"
        ],
        "operationId": "get-locations-location_id",
        "description": "Retrieve a specific location. ",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Location",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-tags": [
                    "Location"
                  ],
                  "description": "Ramp location"
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2.0": [
              "locations:read"
            ]
          }
        ]
      },
      "patch": {
        "summary": "Update location",
        "operationId": "patch-locations-location_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Location",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-tags": [
                    "Location"
                  ],
                  "description": "Ramp location"
                }
              }
            }
          }
        },
        "description": "Modifies a specific location. ",
        "tags": [
          "Location"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New name of location"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "name": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2.0": [
              "locations:write"
            ]
          }
        ]
      }
    },
    "/departments": {
      "get": {
        "summary": "List departments",
        "tags": [
          "Department"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "object",
                      "properties": {
                        "next": {
                          "type": "string"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Department",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "x-tags": [
                          "Department"
                        ],
                        "description": "Ramp Department"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-departments",
        "description": "Retrieve all departments.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "The number of results to be returned in each page. The value must be between 2 and 10,000. If not specified, the default will be 1,000."
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "departments:read"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create department",
        "operationId": "post-departments",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Department",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-tags": [
                    "Department"
                  ],
                  "description": "Ramp Department"
                }
              }
            }
          }
        },
        "description": "Create a new department.",
        "parameters": [],
        "tags": [
          "Department"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2.0": [
              "departments:write"
            ]
          }
        ]
      },
      "parameters": []
    },
    "/departments/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "GET a department",
        "tags": [
          "Department"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Department",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-tags": [
                    "Department"
                  ],
                  "description": "Ramp Department"
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-department-department_id",
        "description": "Retrieve a single department.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "departments:read"
            ]
          }
        ]
      },
      "patch": {
        "summary": "Update department",
        "operationId": "patch-department-department_id",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Department",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "x-tags": [
                    "Department"
                  ],
                  "description": "Ramp Department"
                }
              }
            }
          }
        },
        "description": "Modify a department. ",
        "tags": [
          "Department"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "New department name"
                  }
                },
                "required": [
                  "name"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "name": "string"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2.0": [
              "departments:write"
            ]
          }
        ]
      }
    },
    "/cards": {
      "get": {
        "summary": "List cards",
        "tags": [
          "Card"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "object",
                      "properties": {
                        "next": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "cards": {
                      "type": "array",
                      "items": {
                        "description": "Card data that holds mostly static information about a card.",
                        "type": "object",
                        "x-examples": {
                          "example-1": {
                            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "is_physical": true,
                            "display_name": "string",
                            "last_four": "1234",
                            "cardholder_id": "b41a5553-f9d1-4565-a52e-86ef53ff44f9",
                            "cardholder_name": "string",
                            "card_program_id": "2d5de619-32c8-4906-bbf3-941245a0a8a7",
                            "fulfillment": {
                              "shipping": {
                                "recipient_address": {
                                  "address1": "string",
                                  "city": "string",
                                  "country": "string",
                                  "first_name": "string",
                                  "last_name": "string",
                                  "postal_code": "string",
                                  "state": "string"
                                }
                              }
                            },
                            "spending_restrictions": {
                              "amount": 0,
                              "interval": "DAILY",
                              "lock_date": "2019-08-24T14:15:22Z",
                              "categories": [
                                0
                              ],
                              "transaction_amount_limit": 0
                            }
                          }
                        },
                        "x-tags": [
                          "Card"
                        ],
                        "title": "Card",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "is_physical": {
                            "type": "boolean"
                          },
                          "display_name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "last_four": {
                            "type": "string",
                            "pattern": "[0-9]+",
                            "minLength": 4,
                            "maxLength": 4
                          },
                          "cardholder_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "cardholder_name": {
                            "type": "string"
                          },
                          "card_program_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "fulfillment": {
                            "description": "Details for shipping physical cards",
                            "type": "object",
                            "properties": {
                              "shipping": {
                                "type": "object",
                                "properties": {
                                  "recipient_address": {
                                    "type": "object",
                                    "properties": {
                                      "address1": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "city": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "country": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "first_name": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "last_name": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "postal_code": {
                                        "type": "string",
                                        "minLength": 1
                                      },
                                      "state": {
                                        "type": "string",
                                        "minLength": 1
                                      }
                                    }
                                  }
                                }
                              }
                            },
                            "x-examples": {
                              "example-1": {
                                "shipping": {
                                  "recipient_address": {
                                    "address1": "string",
                                    "city": "string",
                                    "country": "string",
                                    "first_name": "string",
                                    "last_name": "string",
                                    "postal_code": "string",
                                    "state": "string"
                                  }
                                }
                              }
                            },
                            "title": "Card Fulfillment"
                          },
                          "spending_restrictions": {
                            "description": "Specifies the spend restrictions on a Ramp card.",
                            "type": "object",
                            "x-examples": {
                              "example-1": {
                                "amount": 0,
                                "interval": "string",
                                "lock_date": "string",
                                "categories": [
                                  {}
                                ],
                                "transaction_amount_limit": 0
                              }
                            },
                            "x-tags": [
                              "Card"
                            ],
                            "title": "Card Spending Restriction",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "minimum": 0,
                                "description": "Amount limit total per interval."
                              },
                              "interval": {
                                "type": "string",
                                "minLength": 1,
                                "enum": [
                                  "DAILY",
                                  "MONTHLY",
                                  "YEARLY",
                                  "TOTAL"
                                ],
                                "description": "Time interval to apply limit to."
                              },
                              "lock_date": {
                                "type": "string",
                                "minLength": 1,
                                "format": "date-time",
                                "description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card."
                              },
                              "categories": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "List of Ramp Category Codes to restrict this card to.",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "blocked_categories": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "List of Ramp Category Codes blocked for this card.",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "transaction_amount_limit": {
                                "type": "number",
                                "minimum": 0,
                                "description": "Max amount limit per transaction."
                              },
                              "suspended": {
                                "type": "boolean",
                                "description": "Whether the card has been suspended"
                              }
                            },
                            "required": [
                              "amount",
                              "interval"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "page": {
                        "next": "7d617674-5c21-42c8-80ae-b0ab590cb046"
                      },
                      "cards": [
                        {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "is_physical": true,
                          "display_name": "string",
                          "last_four": "stri"
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-cards",
        "description": "Retrieve all cards.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "The number of results to be returned in each page. The value must be between 2 and 10,000. If not specified, the default will be 1,000."
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "user_id"
          },
          {
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "in": "query",
            "name": "card_program_id"
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "cards:read"
            ]
          }
        ]
      },
      "parameters": []
    },
    "/cards/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "GET a card",
        "tags": [
          "Card"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Card data that holds mostly static information about a card.",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "is_physical": true,
                      "display_name": "string",
                      "last_four": "1234",
                      "cardholder_id": "b41a5553-f9d1-4565-a52e-86ef53ff44f9",
                      "cardholder_name": "string",
                      "card_program_id": "2d5de619-32c8-4906-bbf3-941245a0a8a7",
                      "fulfillment": {
                        "shipping": {
                          "recipient_address": {
                            "address1": "string",
                            "city": "string",
                            "country": "string",
                            "first_name": "string",
                            "last_name": "string",
                            "postal_code": "string",
                            "state": "string"
                          }
                        }
                      },
                      "spending_restrictions": {
                        "amount": 0,
                        "interval": "DAILY",
                        "lock_date": "2019-08-24T14:15:22Z",
                        "categories": [
                          0
                        ],
                        "transaction_amount_limit": 0
                      }
                    }
                  },
                  "x-tags": [
                    "Card"
                  ],
                  "title": "Card",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "is_physical": {
                      "type": "boolean"
                    },
                    "display_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "last_four": {
                      "type": "string",
                      "pattern": "[0-9]+",
                      "minLength": 4,
                      "maxLength": 4
                    },
                    "cardholder_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "cardholder_name": {
                      "type": "string"
                    },
                    "card_program_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "fulfillment": {
                      "description": "Details for shipping physical cards",
                      "type": "object",
                      "properties": {
                        "shipping": {
                          "type": "object",
                          "properties": {
                            "recipient_address": {
                              "type": "object",
                              "properties": {
                                "address1": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "city": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "country": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "first_name": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "last_name": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "postal_code": {
                                  "type": "string",
                                  "minLength": 1
                                },
                                "state": {
                                  "type": "string",
                                  "minLength": 1
                                }
                              }
                            }
                          }
                        }
                      },
                      "x-examples": {
                        "example-1": {
                          "shipping": {
                            "recipient_address": {
                              "address1": "string",
                              "city": "string",
                              "country": "string",
                              "first_name": "string",
                              "last_name": "string",
                              "postal_code": "string",
                              "state": "string"
                            }
                          }
                        }
                      },
                      "title": "Card Fulfillment"
                    },
                    "spending_restrictions": {
                      "description": "Specifies the spend restrictions on a Ramp card.",
                      "type": "object",
                      "x-examples": {
                        "example-1": {
                          "amount": 0,
                          "interval": "string",
                          "lock_date": "string",
                          "categories": [
                            {}
                          ],
                          "transaction_amount_limit": 0
                        }
                      },
                      "x-tags": [
                        "Card"
                      ],
                      "title": "Card Spending Restriction",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "minimum": 0,
                          "description": "Amount limit total per interval."
                        },
                        "interval": {
                          "type": "string",
                          "minLength": 1,
                          "enum": [
                            "DAILY",
                            "MONTHLY",
                            "YEARLY",
                            "TOTAL"
                          ],
                          "description": "Time interval to apply limit to."
                        },
                        "lock_date": {
                          "type": "string",
                          "minLength": 1,
                          "format": "date-time",
                          "description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card."
                        },
                        "categories": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "List of Ramp Category Codes to restrict this card to.",
                          "items": {
                            "type": "number"
                          }
                        },
                        "blocked_categories": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "List of Ramp Category Codes blocked for this card.",
                          "items": {
                            "type": "number"
                          }
                        },
                        "transaction_amount_limit": {
                          "type": "number",
                          "minimum": 0,
                          "description": "Max amount limit per transaction."
                        },
                        "suspended": {
                          "type": "boolean",
                          "description": "Whether the card has been suspended"
                        }
                      },
                      "required": [
                        "amount",
                        "interval"
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "is_physical": true,
                      "display_name": "string",
                      "last_four": "stri"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-cards-card_id",
        "description": "Retrieve a single card.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "cards:read"
            ]
          }
        ]
      },
      "patch": {
        "summary": "Update card",
        "operationId": "patch-resources-cards-card_id",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "description": "Update card details",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "Cosmetic display name of the card."
                  },
                  "has_notifications_enabled": {
                    "type": "boolean",
                    "description": "Flag to set to enable or disable notifications."
                  },
                  "spending_restrictions": {
                    "description": "Specifies the spend restrictions on a Ramp card.",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "amount": 0,
                        "interval": "string",
                        "lock_date": "string",
                        "categories": [
                          {}
                        ],
                        "transaction_amount_limit": 0
                      }
                    },
                    "x-tags": [
                      "Card"
                    ],
                    "title": "Card Spending Restriction",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Amount limit total per interval."
                      },
                      "interval": {
                        "type": "string",
                        "minLength": 1,
                        "enum": [
                          "DAILY",
                          "MONTHLY",
                          "YEARLY",
                          "TOTAL"
                        ],
                        "description": "Time interval to apply limit to."
                      },
                      "lock_date": {
                        "type": "string",
                        "minLength": 1,
                        "format": "date-time",
                        "description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card."
                      },
                      "categories": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "List of Ramp Category Codes to restrict this card to.",
                        "items": {
                          "type": "number"
                        }
                      },
                      "blocked_categories": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "List of Ramp Category Codes blocked for this card.",
                        "items": {
                          "type": "number"
                        }
                      },
                      "transaction_amount_limit": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Max amount limit per transaction."
                      },
                      "suspended": {
                        "type": "boolean",
                        "description": "Whether the card has been suspended"
                      }
                    },
                    "required": [
                      "amount",
                      "interval"
                    ]
                  },
                  "card_program_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Set to link card with a card program, or set to null to detach a card from a card program. If the card is already linked with a card program, it will detach from original card program before linking with the new one."
                  }
                }
              },
              "examples": {
                "example-1": {
                  "value": {
                    "display_name": "string",
                    "has_notifications_enabled": true,
                    "spending_restrictions": {
                      "amount": 0,
                      "interval": "DAILY",
                      "lock_date": "2019-08-24T14:15:22Z",
                      "categories": [
                        0
                      ],
                      "transaction_amount_limit": 0
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Card"
        ],
        "security": [
          {
            "OAuth 2.0": [
              "cards:write"
            ]
          }
        ]
      }
    },
    "/custom-id-provider": {
      "parameters": [],
      "get": {
        "summary": "GET the Custom ID provider linked to the current OAuth token",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "custom_id_provider": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "custom_id_provider"
                  ]
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "custom_id_provider": "11111111-1111-1111-1111-111111111111"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-custom_id-custom-id-provider",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "tags": [
          "Custom ID"
        ],
        "security": [
          {
            "OAuth 2.0": []
          }
        ]
      },
      "post": {
        "summary": "Create a Custom ID provider",
        "operationId": "postcustom-id-provider",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization: Bearer 111111111111",
            "description": "OAuth Access token",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "provider_id": {
                      "type": "string"
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "custom_id_provider_uuid": "11111111-1111-1111-1111-111111111111"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "description": "",
        "tags": [
          "Custom ID"
        ]
      }
    },
    "/custom-id-provider/application-link": {
      "post": {
        "summary": "",
        "operationId": "post-custom-id-provider-application-link",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "custom_id_provider": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "custom_id_provider"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "custom_id_provider": "ead7e7bb-3b00-4078-b743-9b11d5cca0ee"
                  }
                }
              }
            }
          }
        },
        "description": "Register an access token with a custom ID provider",
        "tags": [
          "Custom ID"
        ],
        "security": [
          {
            "OAuth 2.0": []
          }
        ]
      }
    },
    "/business": {
      "get": {
        "summary": "GET business metadata",
        "tags": [
          "Business"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Mostly static information about a business that doesn't change often.",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "active": true,
                      "billing_address": {
                        "address1": "string",
                        "city": "string",
                        "country": "string",
                        "postal_code": "string",
                        "state": "string"
                      },
                      "business_memo_required_threshold": 0,
                      "business_name_legal": "string",
                      "business_name_on_card": "string",
                      "business_receipt_required_threshold": 0,
                      "created_time": "string",
                      "enforce_sso": true,
                      "id": "string",
                      "initial_approved_limit": 0,
                      "is_integrated_with_slack": true,
                      "is_reimbursements_enabled": true,
                      "limit_locked": true,
                      "phone": "string",
                      "website": "string"
                    }
                  },
                  "properties": {
                    "active": {
                      "type": "boolean"
                    },
                    "billing_address": {
                      "type": "object",
                      "required": [
                        "address1",
                        "city",
                        "country",
                        "postal_code",
                        "state"
                      ],
                      "properties": {
                        "address1": {
                          "type": "string",
                          "minLength": 1
                        },
                        "city": {
                          "type": "string",
                          "minLength": 1
                        },
                        "country": {
                          "type": "string",
                          "minLength": 1
                        },
                        "postal_code": {
                          "type": "string",
                          "minLength": 1
                        },
                        "state": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    },
                    "business_memo_required_threshold": {
                      "type": "number"
                    },
                    "business_name_legal": {
                      "type": "string",
                      "minLength": 1
                    },
                    "business_name_on_card": {
                      "type": "string"
                    },
                    "business_receipt_required_threshold": {
                      "type": "number"
                    },
                    "created_time": {
                      "type": "string",
                      "minLength": 1
                    },
                    "enforce_sso": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "initial_approved_limit": {
                      "type": "number"
                    },
                    "is_integrated_with_slack": {
                      "type": "boolean"
                    },
                    "is_reimbursements_enabled": {
                      "type": "boolean"
                    },
                    "limit_locked": {
                      "type": "boolean"
                    },
                    "phone": {
                      "type": "string",
                      "minLength": 1
                    },
                    "website": {
                      "type": "string",
                      "minLength": 1
                    }
                  },
                  "required": [
                    "active",
                    "billing_address",
                    "business_memo_required_threshold",
                    "business_name_legal",
                    "business_receipt_required_threshold",
                    "created_time",
                    "enforce_sso",
                    "id",
                    "initial_approved_limit",
                    "is_integrated_with_slack",
                    "is_reimbursements_enabled",
                    "limit_locked",
                    "phone",
                    "website"
                  ],
                  "x-tags": [
                    "Business"
                  ],
                  "title": "Business"
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-resources-business",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "description": "Gets metadata about a business.",
        "security": [
          {
            "OAuth 2.0": [
              "business:read"
            ]
          }
        ]
      }
    },
    "/transactions/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "GET a transaction",
        "tags": [
          "Transaction"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Ramp transaction",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "amount": 0,
                      "card_holder": {
                        "location_name": "string",
                        "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
                        "department_name": "string",
                        "department_id": "094fb5f1-8160-46ea-8cec-010c4b44e054",
                        "first_name": "string",
                        "last_name": "string"
                      },
                      "card_id": "66f6e46c-f6a1-4af8-a1bd-49666bc01304",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "merchant_id": 0,
                      "merchant_name": "string",
                      "sk_category_id": 0,
                      "sk_category_name": "string",
                      "state": "string",
                      "user_transaction_time": "2019-08-24T14:15:22Z",
                      "receipts": [
                        "66f6e46c-f6a1-4af8-a1bd-49666bcXXXXX"
                      ],
                      "policy_violations": [
                        {
                          "created_at": "2019-08-28T14:15:22Z",
                          "type": "POLICY_VIOLATION_FROM_USER",
                          "id": "66f67777-f6a1-4af8-XXXX-49666bcXXXXX",
                          "memo": "Sorry! This is a personal charge."
                        }
                      ],
                      "disputes": [
                        {
                          "created_at": "2019-08-28T14:15:22Z",
                          "type": "MERCHANT_ERROR",
                          "id": "66f6e46c-f6a1-4af8-XXXX-49666bcXXXXX",
                          "memo": "Order was canceled."
                        },
                        {
                          "created_at": "2019-08-29T16:16:26Z",
                          "type": "DISPUTE_CANCELLED",
                          "id": "66666666-f6a1-4af8-XXXX-49666bcXXXXX",
                          "memo": null
                        }
                      ],
                      "accounting_categories": [
                        {
                          "category_id": "123",
                          "category_name": "Office supplies"
                        }
                      ],
                      "memo": "string"
                    }
                  },
                  "x-tags": [
                    "Transaction"
                  ],
                  "title": "Transaction",
                  "examples": [
                    {
                      "amount": 0,
                      "cardholder": {
                        "location_name": "string",
                        "location_id": "46910cc3-ab41-4b80-b4a7-94dab9f1b795",
                        "department_name": "string",
                        "department_id": "094fb5f1-8160-46ea-8cec-010c4b44e054",
                        "first_name": "string",
                        "last_name": "string"
                      },
                      "card_id": "66f6e46c-f6a1-4af8-a1bd-49666bc01304",
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "merchant_id": "500924a8-3f5e-4c00-beb8-2efcde988aea",
                      "merchant_name": "string",
                      "sk_category_id": 0,
                      "sk_category_name": "string",
                      "state": "string",
                      "user_transaction_time": "2019-08-24T14:15:22Z",
                      "receipts": [
                        "66f6e46c-f6a1-4af8-a1bd-49666bcXXXXX"
                      ],
                      "policy_violations": [
                        {
                          "created_at": "2019-08-28T14:15:22Z",
                          "type": "POLICY_VIOLATION_FROM_USER",
                          "id": "66f67777-f6a1-4af8-XXXX-49666bcXXXXX",
                          "memo": "Sorry! This is a personal charge."
                        }
                      ],
                      "disputes": [
                        {
                          "created_at": "2019-08-28T14:15:22Z",
                          "type": "MERCHANT_ERROR",
                          "id": "66f6e46c-f6a1-4af8-XXXX-49666bcXXXXX",
                          "memo": "Order was canceled."
                        },
                        {
                          "created_at": "2019-08-29T16:16:26Z",
                          "type": "DISPUTE_CANCELLED",
                          "id": "66666666-f6a1-4af8-XXXX-49666bcXXXXX",
                          "memo": null
                        }
                      ],
                      "accounting_categories": [
                        {
                          "category_id": "123",
                          "category_name": "Office supplies"
                        }
                      ]
                    }
                  ],
                  "properties": {
                    "amount": {
                      "type": "number"
                    },
                    "card_holder": {
                      "type": "object",
                      "required": [
                        "location_name",
                        "location_id",
                        "department_name",
                        "department_id",
                        "first_name",
                        "last_name"
                      ],
                      "properties": {
                        "location_name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "location_id": {
                          "type": "string",
                          "minLength": 1,
                          "format": "uuid"
                        },
                        "department_name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "department_id": {
                          "type": "string",
                          "minLength": 1,
                          "format": "uuid"
                        },
                        "first_name": {
                          "type": "string",
                          "minLength": 1
                        },
                        "last_name": {
                          "type": "string",
                          "minLength": 1
                        }
                      }
                    },
                    "card_id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "merchant_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "merchant_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "sk_category_id": {
                      "type": "number"
                    },
                    "sk_category_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "state": {
                      "type": "string",
                      "minLength": 1
                    },
                    "user_transaction_time": {
                      "type": "string",
                      "minLength": 1,
                      "format": "date-time"
                    },
                    "receipts": {
                      "description": "Receipts listed in ascending order by their creation time, related to the transaction.",
                      "type": "array",
                      "items": {
                        "type": "string",
                        "minLength": 1,
                        "format": "uuid"
                      }
                    },
                    "memo": {
                      "type": "string"
                    },
                    "accounting_categories": {
                      "description": "Accounting categories related to the transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "category_id": {
                            "type": "string"
                          },
                          "category_name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "policy_violations": {
                      "description": "Policy violations listed in descending order by their creation time, related to the transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "POLICY_VIOLATION_FROM_ADMIN",
                              "POLICY_VIOLATION_FROM_USER"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "memo": {
                            "type": "string",
                            "description": "Free form text regarding the policy violation."
                          }
                        }
                      }
                    },
                    "disputes": {
                      "description": "Disputes listed in descending order by their creation time, related to the transaction.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "type": {
                            "type": "string",
                            "enum": [
                              "MERCHANT_ERROR",
                              "UNRECOGNIZED_CHARGE",
                              "DISPUTE_CANCELLED",
                              "UNKNOWN"
                            ]
                          },
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "memo": {
                            "type": "string",
                            "description": "Free form text provided by the dispute initiator."
                          }
                        }
                      }
                    }
                  },
                  "required": [
                    "amount",
                    "card_holder",
                    "card_id",
                    "id",
                    "merchant_id",
                    "merchant_name",
                    "sk_category_id",
                    "sk_category_name",
                    "state",
                    "user_transaction_time"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-resources-transactions-transaction_id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "description": "",
        "security": [
          {
            "OAuth 2.0": [
              "transactions:read"
            ]
          }
        ]
      }
    },
    "/cards/deferred/physical": {
      "post": {
        "summary": "Create a physical card",
        "operationId": "post-resources-card-physical",
        "responses": {
          "201": {
            "description": "Response with the ID of a potentially long-running job. Task status can be checked via a GET call to `.../deferred/status/{task_id}`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the job started."
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "tags": [
          "Card"
        ],
        "description": "",
        "security": [
          {
            "OAuth 2.0": [
              "cards:write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "card_program_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Alternative method to create card using a card program. Card program's is_physical must be true. If this value is given, no other attributes (other than idempotency_key) may be given."
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "spending_restrictions": {
                    "description": "Specifies the spend restrictions on a Ramp card.",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "amount": 0,
                        "interval": "string",
                        "lock_date": "string",
                        "categories": [
                          {}
                        ],
                        "transaction_amount_limit": 0
                      }
                    },
                    "x-tags": [
                      "Card"
                    ],
                    "title": "Card Spending Restriction",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Amount limit total per interval."
                      },
                      "interval": {
                        "type": "string",
                        "minLength": 1,
                        "enum": [
                          "DAILY",
                          "MONTHLY",
                          "YEARLY",
                          "TOTAL"
                        ],
                        "description": "Time interval to apply limit to."
                      },
                      "lock_date": {
                        "type": "string",
                        "minLength": 1,
                        "format": "date-time",
                        "description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card."
                      },
                      "categories": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "List of Ramp Category Codes to restrict this card to.",
                        "items": {
                          "type": "number"
                        }
                      },
                      "blocked_categories": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "List of Ramp Category Codes blocked for this card.",
                        "items": {
                          "type": "number"
                        }
                      },
                      "transaction_amount_limit": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Max amount limit per transaction."
                      },
                      "suspended": {
                        "type": "boolean",
                        "description": "Whether the card has been suspended"
                      }
                    },
                    "required": [
                      "amount",
                      "interval"
                    ]
                  },
                  "fulfillment": {
                    "description": "Details for shipping physical cards",
                    "type": "object",
                    "properties": {
                      "shipping": {
                        "type": "object",
                        "properties": {
                          "recipient_address": {
                            "type": "object",
                            "properties": {
                              "address1": {
                                "type": "string",
                                "minLength": 1
                              },
                              "city": {
                                "type": "string",
                                "minLength": 1
                              },
                              "country": {
                                "type": "string",
                                "minLength": 1
                              },
                              "first_name": {
                                "type": "string",
                                "minLength": 1
                              },
                              "last_name": {
                                "type": "string",
                                "minLength": 1
                              },
                              "postal_code": {
                                "type": "string",
                                "minLength": 1
                              },
                              "state": {
                                "type": "string",
                                "minLength": 1
                              }
                            }
                          }
                        }
                      }
                    },
                    "x-examples": {
                      "example-1": {
                        "shipping": {
                          "recipient_address": {
                            "address1": "string",
                            "city": "string",
                            "country": "string",
                            "first_name": "string",
                            "last_name": "string",
                            "postal_code": "string",
                            "state": "string"
                          }
                        }
                      }
                    },
                    "title": "Card Fulfillment"
                  },
                  "idempotency_key": {
                    "type": "string",
                    "description": "Idempotency key"
                  }
                },
                "required": [
                  "idempotency_key"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "display_name": "string",
                    "user_id": "a169451c-8525-4352-b8ca-070dd449a1a5",
                    "spending_restrictions": {
                      "amount": 0,
                      "interval": "DAILY",
                      "lock_date": "2019-08-24T14:15:22Z",
                      "categories": [
                        0
                      ],
                      "transaction_amount_limit": 0
                    },
                    "fulfillment": {
                      "shipping": {
                        "recipient_address": {
                          "address1": "string",
                          "city": "string",
                          "country": "string",
                          "first_name": "string",
                          "last_name": "string",
                          "postal_code": "string",
                          "state": "string"
                        }
                      }
                    },
                    "idempotency_key": "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/cards/deferred/virtual": {
      "post": {
        "summary": "Create a virtual card",
        "operationId": "post-resources-card-virtual",
        "responses": {
          "201": {
            "description": "Response with the ID of a potentially long-running job. Task status can be checked via a GET call to `.../deferred/status/{task_id}`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the job started."
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "tags": [
          "Card"
        ],
        "description": "",
        "security": [
          {
            "OAuth 2.0": [
              "cards:write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "card_program_id": {
                    "type": "string",
                    "format": "uuid",
                    "description": "Alternative method to create card using a card program. Card program's is_physical must be false. If this value is given, no other attributes (other than idempotency_key) may be given."
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "user_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "spending_restrictions": {
                    "description": "Specifies the spend restrictions on a Ramp card.",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "amount": 0,
                        "interval": "string",
                        "lock_date": "string",
                        "categories": [
                          {}
                        ],
                        "transaction_amount_limit": 0
                      }
                    },
                    "x-tags": [
                      "Card"
                    ],
                    "title": "Card Spending Restriction",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Amount limit total per interval."
                      },
                      "interval": {
                        "type": "string",
                        "minLength": 1,
                        "enum": [
                          "DAILY",
                          "MONTHLY",
                          "YEARLY",
                          "TOTAL"
                        ],
                        "description": "Time interval to apply limit to."
                      },
                      "lock_date": {
                        "type": "string",
                        "minLength": 1,
                        "format": "date-time",
                        "description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card."
                      },
                      "categories": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "List of Ramp Category Codes to restrict this card to.",
                        "items": {
                          "type": "number"
                        }
                      },
                      "blocked_categories": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "List of Ramp Category Codes blocked for this card.",
                        "items": {
                          "type": "number"
                        }
                      },
                      "transaction_amount_limit": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Max amount limit per transaction."
                      },
                      "suspended": {
                        "type": "boolean",
                        "description": "Whether the card has been suspended"
                      }
                    },
                    "required": [
                      "amount",
                      "interval"
                    ]
                  },
                  "idempotency_key": {
                    "type": "string",
                    "description": "Idempotency key"
                  }
                },
                "required": [
                  "idempotency_key"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "display_name": "string",
                    "user_id": "a169451c-8525-4352-b8ca-070dd449a1a5",
                    "spending_restrictions": {
                      "amount": 0,
                      "interval": "DAILY",
                      "lock_date": "2019-08-24T14:15:22Z",
                      "categories": [
                        0
                      ],
                      "transaction_amount_limit": 0
                    },
                    "idempotency_key": "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/token": {
      "post": {
        "summary": "Get OAuth2 token",
        "operationId": "post-token",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-tags": [
                    "Auth"
                  ],
                  "title": "OAuth2 Token",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "expires_in": {
                      "type": "integer",
                      "description": "Expiration time for access token in seconds"
                    },
                    "scope": {
                      "type": "string",
                      "description": "Space-separated set of strings representing accessible resources"
                    },
                    "token_type": {
                      "type": "string",
                      "enum": [
                        "Bearer"
                      ]
                    },
                    "refresh_token": {
                      "type": "string"
                    },
                    "refresh_token_expires_in": {
                      "type": "integer",
                      "description": "Expiration time for refresh token in seconds"
                    }
                  },
                  "required": [
                    "access_token",
                    "expires_in",
                    "scope",
                    "token_type"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "type": "object",
                "properties": {
                  "grant_type": {
                    "type": "string",
                    "enum": [
                      "authorization_code",
                      "refresh_token",
                      "client_credentials"
                    ]
                  },
                  "scope": {
                    "type": "string",
                    "description": "Space-separated list of scopes for access token",
                    "example": "transactions:read transactions:write"
                  },
                  "code": {
                    "type": "string"
                  },
                  "redirect_uri": {
                    "type": "string",
                    "format": "uri"
                  },
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "grant_type"
                ]
              },
              "examples": {
                "Authorization Code": {
                  "value": {
                    "grant_type": "authorization_code",
                    "scope": "transactions:read transactions:write",
                    "code": "abcdef",
                    "redirect_uri": "http://example.com"
                  }
                },
                "Refresh Token": {
                  "value": {
                    "grant_type": "refresh_token",
                    "scope": "transactions:read transactions:write",
                    "refresh_token": "abcdef"
                  }
                },
                "Client Credentials": {
                  "value": {
                    "grant_type": "client_credentials",
                    "scope": "transactions:read transactions:write"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "header",
            "name": "Authorization",
            "description": "Basic \\<base64-encoded client_id:client_secret\\>"
          }
        ],
        "tags": [
          "Auth"
        ],
        "description": "Returns an access token for accessing endpoints. There are three methods to get an access token:\n* \"authorization\\_code\": Authorization Code Grant method, used for retrieving an access token for the first time\n* \"refresh\\_token\": Refresh Token method, used for retrieving subsequent access tokens using the refresh token provided from authorization code grant\n* \"client\\_credentials\": Client Credentials method, allows direct retrieval of access tokens with only client id and secret.\n\nThere are two main flows: Authorization Code Grant + Refresh Token; or Client Credentials.\n\nFor Authorization Code Grant + Refresh Token, the flow would be as follows:\n* Follow authorization process to get an authorization code\n* Use authorization code to retrieve an access token and refresh token from this endpoint\n* Use refresh token to retrieve new access tokens from this endpoint (without having to go through authorization process again)\n\nFor Client Credentials:\n* Call token endpoint with client credentials to retrieve access token\n\nThe request body is different for the methods:\n* grant\\_type = \"authorization\\_code\"\n  * code\n  * redirect\\_uri\n* grant\\_type = \"refresh\\_token\"\n  * refresh\\_token\n* grant\\_type = \"client\\_credentials\"\n  * no additional data\n\nSome important notes:\n* Unlike other endpoints, the data format must be \"application/x-www-form-urlencoded\", according to [RFC specifications](https://datatracker.ietf.org/doc/html/rfc6749#appendix-B)\n* To use a particular code grant, it must be included in the \"Grant Types\" section of the App Settings modal in app.ramp.com\n* Only the authorization code grant returns a refresh token\n  * Additionally, the \"Refresh Token\" grant type must be selected in App Settings for the refresh token to be returned\n* The token endpoint used to be \"/public/v1/customer/token\" - this endpoint is now deprecated and should not be used"
      }
    },
    "/business/balance": {
      "get": {
        "summary": "GET current info about a business",
        "tags": [
          "Business"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Business Current Status",
                  "type": "object",
                  "description": "Current data about the business.",
                  "properties": {
                    "statement_balance": {
                      "type": "number"
                    },
                    "balance_including_pending": {
                      "type": "number"
                    },
                    "max_balance": {
                      "type": "number"
                    },
                    "next_billing_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "prev_billing_date": {
                      "type": "string",
                      "format": "date"
                    }
                  },
                  "x-tags": [
                    "Business"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-resources-business-current",
        "description": "Gets current information about a business.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "business:read"
            ]
          }
        ]
      }
    },
    "/cards/{id}/deferred/termination": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Delete a card",
        "operationId": "post-resources-cards-card_id-termination",
        "responses": {
          "200": {
            "description": "Response with the ID of a potentially long-running job. Task status can be checked via a GET call to `.../deferred/status/{task_id}`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the job started."
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Card"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idempotency_key": {
                    "type": "string",
                    "description": "Idempotency key"
                  }
                },
                "required": [
                  "idempotency_key"
                ]
              }
            }
          }
        },
        "description": "Terminates a card permanently.",
        "security": [
          {
            "OAuth 2.0": [
              "cards:write"
            ]
          }
        ]
      }
    },
    "/cards/{id}/deferred/suspension": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Suspend a card",
        "operationId": "post-resources-cards-card_id-suspension",
        "responses": {
          "200": {
            "description": "Response with the ID of a potentially long-running job. Task status can be checked via a GET call to `.../deferred/status/{task_id}`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the job started."
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Card"
        ],
        "description": "Suspends a card so that it is locked from use. The suspension is revertable.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idempotency_key": {
                    "type": "string",
                    "description": "Idempotency key"
                  }
                },
                "required": [
                  "idempotency_key"
                ]
              }
            }
          }
        },
        "security": [
          {
            "OAuth 2.0": [
              "cards:write"
            ]
          }
        ]
      }
    },
    "/cards/{id}/deferred/unsuspension": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Removes a card's suspension",
        "operationId": "post-resources-cards-card_id-unsuspension",
        "responses": {
          "200": {
            "description": "Response with the ID of a potentially long-running job. Task status can be checked via a GET call to `.../deferred/status/{task_id}`.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the job started."
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "tags": [
          "Card"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "idempotency_key": {
                    "type": "string",
                    "description": "Idempotency key"
                  }
                },
                "required": [
                  "idempotency_key"
                ]
              }
            }
          }
        },
        "description": "Removes a card's suspension so that it may be used again.",
        "security": [
          {
            "OAuth 2.0": [
              "cards:write"
            ]
          }
        ]
      }
    },
    "/custom-id-provider/{entity_type}/{custom_id}/ramp-id": {
      "parameters": [
        {
          "name": "entity_type",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "custom_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Convert custom id to ramp id",
        "tags": [
          "Custom ID"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "ramp_id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-entity_type-custom_id-ramp-id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "description": "",
        "security": [
          {
            "OAuth 2.0": []
          }
        ]
      }
    },
    "/custom-id-provider/{entity_type}/{ramp_id}/custom-id": {
      "parameters": [
        {
          "name": "entity_type",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "ramp_id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Convert ramp id to custom id",
        "tags": [
          "Custom ID"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "custom_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-entity_type-ramp_id-custom-id",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "security": [
          {
            "OAuth 2.0": []
          }
        ]
      }
    },
    "/cards/deferred/status/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get status of a deferred card task",
        "tags": [
          "Card"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true
                        },
                        "misc": {
                          "type": "string",
                          "nullable": true
                        },
                        "card_id": {
                          "type": "string",
                          "nullable": true
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "STARTED",
                        "IN_PROGRESS",
                        "ERROR",
                        "SUCCESS"
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "data": {
                        "error": null,
                        "id": null,
                        "misc": null
                      },
                      "status": "STARTED"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-resources-cards-deferred-id",
        "description": "Gets status of a deferred task for cards",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "cards:write"
            ]
          }
        ]
      }
    },
    "/card-programs": {
      "parameters": [],
      "get": {
        "summary": "List card programs",
        "tags": [
          "Card Program"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "object",
                      "properties": {
                        "next": {
                          "type": "string",
                          "format": "uuid"
                        }
                      }
                    },
                    "card-programs": {
                      "type": "array",
                      "items": {
                        "description": "Card Program data that serves as a template for creating new cards.",
                        "type": "object",
                        "x-examples": {
                          "example-1": {
                            "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                            "display_name": "string",
                            "description": "string",
                            "icon": "CardIcon",
                            "is_default": true,
                            "is_physical": true,
                            "spending_restrictions": {
                              "amount": 0,
                              "interval": "DAILY",
                              "lock_date": "2019-08-24T14:15:22Z",
                              "categories": [
                                0
                              ],
                              "transaction_amount_limit": 0
                            }
                          }
                        },
                        "x-tags": [
                          "Card Program"
                        ],
                        "title": "Card Program",
                        "properties": {
                          "id": {
                            "type": "string",
                            "minLength": 1,
                            "format": "uuid"
                          },
                          "display_name": {
                            "type": "string",
                            "minLength": 1
                          },
                          "description": {
                            "type": "string"
                          },
                          "icon": {
                            "type": "string",
                            "enum": [
                              "LunchOrderingIcon",
                              "SoftwareTrialIcon",
                              "AdvertisingIcon",
                              "SaasSubscriptionIcon",
                              "OnboardingIcon",
                              "WellnessIcon",
                              "EducationStipendIcon",
                              "PerDiemCardIcon",
                              "TravelExpensesIcon",
                              "CardIcon"
                            ]
                          },
                          "is_default": {
                            "type": "boolean"
                          },
                          "is_physical": {
                            "type": "boolean"
                          },
                          "spending_restrictions": {
                            "description": "Specifies the spend restrictions on a Ramp card.",
                            "type": "object",
                            "x-examples": {
                              "example-1": {
                                "amount": 0,
                                "interval": "string",
                                "lock_date": "string",
                                "categories": [
                                  {}
                                ],
                                "transaction_amount_limit": 0
                              }
                            },
                            "x-tags": [
                              "Card"
                            ],
                            "title": "Card Spending Restriction",
                            "properties": {
                              "amount": {
                                "type": "number",
                                "minimum": 0,
                                "description": "Amount limit total per interval."
                              },
                              "interval": {
                                "type": "string",
                                "minLength": 1,
                                "enum": [
                                  "DAILY",
                                  "MONTHLY",
                                  "YEARLY",
                                  "TOTAL"
                                ],
                                "description": "Time interval to apply limit to."
                              },
                              "lock_date": {
                                "type": "string",
                                "minLength": 1,
                                "format": "date-time",
                                "description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card."
                              },
                              "categories": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "List of Ramp Category Codes to restrict this card to.",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "blocked_categories": {
                                "type": "array",
                                "uniqueItems": true,
                                "description": "List of Ramp Category Codes blocked for this card.",
                                "items": {
                                  "type": "number"
                                }
                              },
                              "transaction_amount_limit": {
                                "type": "number",
                                "minimum": 0,
                                "description": "Max amount limit per transaction."
                              },
                              "suspended": {
                                "type": "boolean",
                                "description": "Whether the card has been suspended"
                              }
                            },
                            "required": [
                              "amount",
                              "interval"
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "page": {
                        "next": "7d617674-5c21-42c8-80ae-b0ab590cb046"
                      },
                      "card-programs": [
                        {
                          "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                          "display_name": "string",
                          "description": "string",
                          "icon": "CardIcon",
                          "is_default": true,
                          "is_physical": true,
                          "spending_restrictions": {
                            "amount": 0,
                            "interval": "DAILY",
                            "lock_date": "2019-08-24T14:15:22Z",
                            "categories": [
                              0
                            ],
                            "transaction_amount_limit": 0
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-card_programs",
        "description": "Retrieve all card programs.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "The number of results to be returned in each page. The value must be between 2 and 10,000. If not specified, the default will be 1,000."
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "card_programs:read"
            ]
          }
        ]
      },
      "post": {
        "summary": "Create a card program",
        "operationId": "post-resources-card_program",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Card Program data that serves as a template for creating new cards.",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "display_name": "string",
                      "description": "string",
                      "icon": "CardIcon",
                      "is_default": true,
                      "is_physical": true,
                      "spending_restrictions": {
                        "amount": 0,
                        "interval": "DAILY",
                        "lock_date": "2019-08-24T14:15:22Z",
                        "categories": [
                          0
                        ],
                        "transaction_amount_limit": 0
                      }
                    }
                  },
                  "x-tags": [
                    "Card Program"
                  ],
                  "title": "Card Program",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "display_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "description": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string",
                      "enum": [
                        "LunchOrderingIcon",
                        "SoftwareTrialIcon",
                        "AdvertisingIcon",
                        "SaasSubscriptionIcon",
                        "OnboardingIcon",
                        "WellnessIcon",
                        "EducationStipendIcon",
                        "PerDiemCardIcon",
                        "TravelExpensesIcon",
                        "CardIcon"
                      ]
                    },
                    "is_default": {
                      "type": "boolean"
                    },
                    "is_physical": {
                      "type": "boolean"
                    },
                    "spending_restrictions": {
                      "description": "Specifies the spend restrictions on a Ramp card.",
                      "type": "object",
                      "x-examples": {
                        "example-1": {
                          "amount": 0,
                          "interval": "string",
                          "lock_date": "string",
                          "categories": [
                            {}
                          ],
                          "transaction_amount_limit": 0
                        }
                      },
                      "x-tags": [
                        "Card"
                      ],
                      "title": "Card Spending Restriction",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "minimum": 0,
                          "description": "Amount limit total per interval."
                        },
                        "interval": {
                          "type": "string",
                          "minLength": 1,
                          "enum": [
                            "DAILY",
                            "MONTHLY",
                            "YEARLY",
                            "TOTAL"
                          ],
                          "description": "Time interval to apply limit to."
                        },
                        "lock_date": {
                          "type": "string",
                          "minLength": 1,
                          "format": "date-time",
                          "description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card."
                        },
                        "categories": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "List of Ramp Category Codes to restrict this card to.",
                          "items": {
                            "type": "number"
                          }
                        },
                        "blocked_categories": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "List of Ramp Category Codes blocked for this card.",
                          "items": {
                            "type": "number"
                          }
                        },
                        "transaction_amount_limit": {
                          "type": "number",
                          "minimum": 0,
                          "description": "Max amount limit per transaction."
                        },
                        "suspended": {
                          "type": "boolean",
                          "description": "Whether the card has been suspended"
                        }
                      },
                      "required": [
                        "amount",
                        "interval"
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "tags": [
          "Card Program"
        ],
        "description": "",
        "security": [
          {
            "OAuth 2.0": [
              "card_programs:write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "icon": {
                    "type": "string",
                    "enum": [
                      "LunchOrderingIcon",
                      "SoftwareTrialIcon",
                      "AdvertisingIcon",
                      "SaasSubscriptionIcon",
                      "OnboardingIcon",
                      "WellnessIcon",
                      "EducationStipendIcon",
                      "PerDiemCardIcon",
                      "TravelExpensesIcon",
                      "CardIcon"
                    ]
                  },
                  "is_default": {
                    "type": "boolean"
                  },
                  "is_physical": {
                    "type": "boolean"
                  },
                  "spending_restrictions": {
                    "description": "Specifies the spend restrictions on a Ramp card.",
                    "type": "object",
                    "x-examples": {
                      "example-1": {
                        "amount": 0,
                        "interval": "string",
                        "lock_date": "string",
                        "categories": [
                          {}
                        ],
                        "transaction_amount_limit": 0
                      }
                    },
                    "x-tags": [
                      "Card"
                    ],
                    "title": "Card Spending Restriction",
                    "properties": {
                      "amount": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Amount limit total per interval."
                      },
                      "interval": {
                        "type": "string",
                        "minLength": 1,
                        "enum": [
                          "DAILY",
                          "MONTHLY",
                          "YEARLY",
                          "TOTAL"
                        ],
                        "description": "Time interval to apply limit to."
                      },
                      "lock_date": {
                        "type": "string",
                        "minLength": 1,
                        "format": "date-time",
                        "description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card."
                      },
                      "categories": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "List of Ramp Category Codes to restrict this card to.",
                        "items": {
                          "type": "number"
                        }
                      },
                      "blocked_categories": {
                        "type": "array",
                        "uniqueItems": true,
                        "description": "List of Ramp Category Codes blocked for this card.",
                        "items": {
                          "type": "number"
                        }
                      },
                      "transaction_amount_limit": {
                        "type": "number",
                        "minimum": 0,
                        "description": "Max amount limit per transaction."
                      },
                      "suspended": {
                        "type": "boolean",
                        "description": "Whether the card has been suspended"
                      }
                    },
                    "required": [
                      "amount",
                      "interval"
                    ]
                  }
                },
                "required": [
                  "display_name",
                  "description",
                  "icon",
                  "is_default",
                  "is_physical",
                  "spending_restrictions"
                ]
              },
              "examples": {
                "example-1": {
                  "value": {
                    "display_name": "string",
                    "description": "string",
                    "icon": "CardIcon",
                    "is_default": true,
                    "is_physical": true,
                    "spending_restrictions": {
                      "amount": 0,
                      "interval": "DAILY",
                      "lock_date": "2019-08-24T14:15:22Z",
                      "categories": [
                        0
                      ],
                      "transaction_amount_limit": 0
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/card-programs/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "GET a card program",
        "tags": [
          "Card Program"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "Card Program data that serves as a template for creating new cards.",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "display_name": "string",
                      "description": "string",
                      "icon": "CardIcon",
                      "is_default": true,
                      "is_physical": true,
                      "spending_restrictions": {
                        "amount": 0,
                        "interval": "DAILY",
                        "lock_date": "2019-08-24T14:15:22Z",
                        "categories": [
                          0
                        ],
                        "transaction_amount_limit": 0
                      }
                    }
                  },
                  "x-tags": [
                    "Card Program"
                  ],
                  "title": "Card Program",
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "display_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "description": {
                      "type": "string"
                    },
                    "icon": {
                      "type": "string",
                      "enum": [
                        "LunchOrderingIcon",
                        "SoftwareTrialIcon",
                        "AdvertisingIcon",
                        "SaasSubscriptionIcon",
                        "OnboardingIcon",
                        "WellnessIcon",
                        "EducationStipendIcon",
                        "PerDiemCardIcon",
                        "TravelExpensesIcon",
                        "CardIcon"
                      ]
                    },
                    "is_default": {
                      "type": "boolean"
                    },
                    "is_physical": {
                      "type": "boolean"
                    },
                    "spending_restrictions": {
                      "description": "Specifies the spend restrictions on a Ramp card.",
                      "type": "object",
                      "x-examples": {
                        "example-1": {
                          "amount": 0,
                          "interval": "string",
                          "lock_date": "string",
                          "categories": [
                            {}
                          ],
                          "transaction_amount_limit": 0
                        }
                      },
                      "x-tags": [
                        "Card"
                      ],
                      "title": "Card Spending Restriction",
                      "properties": {
                        "amount": {
                          "type": "number",
                          "minimum": 0,
                          "description": "Amount limit total per interval."
                        },
                        "interval": {
                          "type": "string",
                          "minLength": 1,
                          "enum": [
                            "DAILY",
                            "MONTHLY",
                            "YEARLY",
                            "TOTAL"
                          ],
                          "description": "Time interval to apply limit to."
                        },
                        "lock_date": {
                          "type": "string",
                          "minLength": 1,
                          "format": "date-time",
                          "description": "Date to automatically lock the card. If lock date has passed, set to a future date or to null to unlock the card."
                        },
                        "categories": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "List of Ramp Category Codes to restrict this card to.",
                          "items": {
                            "type": "number"
                          }
                        },
                        "blocked_categories": {
                          "type": "array",
                          "uniqueItems": true,
                          "description": "List of Ramp Category Codes blocked for this card.",
                          "items": {
                            "type": "number"
                          }
                        },
                        "transaction_amount_limit": {
                          "type": "number",
                          "minimum": 0,
                          "description": "Max amount limit per transaction."
                        },
                        "suspended": {
                          "type": "boolean",
                          "description": "Whether the card has been suspended"
                        }
                      },
                      "required": [
                        "amount",
                        "interval"
                      ]
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "display_name": "string",
                      "description": "string",
                      "icon": "CardIcon",
                      "is_default": true,
                      "is_physical": true,
                      "fulfillment": {
                        "shipping": {
                          "recipient_address": {
                            "address1": "string",
                            "city": "string",
                            "country": "string",
                            "first_name": "string",
                            "last_name": "string",
                            "postal_code": "string",
                            "state": "string"
                          }
                        }
                      },
                      "spending_restrictions": {
                        "amount": 0,
                        "interval": "DAILY",
                        "lock_date": "2019-08-24T14:15:22Z",
                        "categories": [
                          0
                        ],
                        "transaction_amount_limit": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Standard error response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string"
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-card_programs-card_program_id",
        "description": "Retrieve a single card program.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "schema": {
              "type": "string",
              "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
            },
            "description": "The OAuth2 token header",
            "required": true
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "card_programs:read"
            ]
          }
        ]
      }
    },
    "/users/deferred": {
      "post": {
        "summary": "Invite a new user",
        "operationId": "post-users-deferred",
        "responses": {
          "201": {
            "description": "Created",
            "headers": {},
            "content": {
              "application/json": {
                "schema": {
                  "description": "Ramp User",
                  "type": "object",
                  "title": "User",
                  "x-examples": {
                    "example-1": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "email": "user@example.com",
                      "first_name": "string",
                      "last_name": "string",
                      "role": "BUSINESS_ADMIN",
                      "phone": "string",
                      "deleted": true,
                      "location_id": null,
                      "department_id": null,
                      "manager_id": null,
                      "business_id": "f59fcbb7-848d-4242-af07-a8bb7e3ab37c"
                    }
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1,
                      "format": "uuid"
                    },
                    "email": {
                      "type": "string",
                      "minLength": 1,
                      "format": "email"
                    },
                    "first_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "last_name": {
                      "type": "string",
                      "minLength": 1
                    },
                    "role": {
                      "type": "string",
                      "minLength": 1,
                      "enum": [
                        "BUSINESS_ADMIN",
                        "BUSINESS_USER",
                        "BUSINESS_OWNER",
                        "BUSINESS_BOOKKEEPER"
                      ]
                    },
                    "phone": {
                      "type": "string",
                      "minLength": 1
                    },
                    "amount_limit": {
                      "type": "string"
                    },
                    "location_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "department_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "manager_id": {
                      "type": "string",
                      "nullable": true,
                      "format": "uuid"
                    },
                    "business_id": {
                      "type": "string",
                      "format": "uuid"
                    }
                  },
                  "required": [
                    "id",
                    "email",
                    "first_name",
                    "last_name",
                    "role",
                    "phone",
                    "amount_limit"
                  ]
                }
              }
            }
          }
        },
        "description": "Creates an invite for the user to accept. Also optionally sets department, location, and manager.",
        "security": [
          {
            "OAuth 2.0": [
              "users:write"
            ]
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "first_name": {
                    "type": "string"
                  },
                  "last_name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "role": {
                    "type": "string",
                    "enum": [
                      "BUSINESS_ADMIN",
                      "BUSINESS_USER",
                      "BUSINESS_OWNER",
                      "BUSINESS_BOOKKEEPER"
                    ]
                  },
                  "department_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "location_id": {
                    "type": "string",
                    "format": "uuid"
                  },
                  "direct_manager_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                },
                "required": [
                  "first_name",
                  "last_name",
                  "email",
                  "phone",
                  "role"
                ]
              }
            }
          }
        },
        "tags": [
          "User"
        ]
      }
    },
    "/users/deferred/status/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get status of a deferred user task",
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "id": "497f6eca-6276-4993-bfeb-53cbbbba6f08",
                      "data": {
                        "error": null,
                        "id": null,
                        "misc": null
                      },
                      "status": "STARTED"
                    }
                  },
                  "properties": {
                    "id": {
                      "type": "string",
                      "minLength": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "error": {
                          "type": "string",
                          "nullable": true
                        },
                        "id": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true
                        },
                        "misc": {
                          "type": "string",
                          "nullable": true
                        },
                        "user_id": {
                          "type": "string",
                          "format": "uuid",
                          "nullable": true
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "minLength": 1
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "description": "",
                  "type": "object",
                  "x-examples": {
                    "example-1": {
                      "error": {
                        "message": "string",
                        "details": {}
                      }
                    }
                  },
                  "properties": {
                    "error": {
                      "type": "object",
                      "properties": {
                        "message": {
                          "type": "string",
                          "minLength": 1
                        },
                        "details": {
                          "type": "object",
                          "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-users-deferred-status-id",
        "description": "Gets status of a deferred task for users",
        "security": [
          {
            "OAuth 2.0": [
              "users:write"
            ]
          }
        ]
      }
    },
    "/receipts": {
      "get": {
        "summary": "List receipts",
        "tags": [
          "Receipt"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "object",
                      "properties": {
                        "next": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "title": "Receipt.v1",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "transaction_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "user_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "receipt_url": {
                            "type": "string",
                            "format": "uri",
                            "description": "Pre-signed url to download receipt image"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-receipts",
        "description": "Returns description of all receipts of a business.",
        "security": [
          {
            "OAuth 2.0": [
              "receipts:read"
            ]
          }
        ],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "format": "date-time",
              "example": "2020-12-02T00:00:00"
            },
            "in": "query",
            "name": "from_date",
            "description": "Filter for receipts related to transactions which occurred after the specified date."
          },
          {
            "schema": {
              "type": "string",
              "example": "2020-12-02T00:00:00",
              "format": "date-time"
            },
            "in": "query",
            "name": "to_date",
            "description": "Filter for receipts related to transactions which occurred before the specified date."
          },
          {
            "schema": {
              "type": "string",
              "example": "2020-12-02T00:00:00",
              "format": "date-time"
            },
            "in": "query",
            "name": "created_after",
            "description": "Filter for receipts that were created after the specified date."
          },
          {
            "schema": {
              "type": "string",
              "example": "2020-12-02T00:00:00",
              "format": "date-time"
            },
            "in": "query",
            "name": "created_before",
            "description": "Filter for receipts that were created before the specified date."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "The number of results to be returned in each page. The value must be between 2 and 10,000. If not specified, the default will be 1,000."
          }
        ]
      }
    },
    "/receipts/{id}": {
      "get": {
        "summary": "Get details for one receipt",
        "tags": [
          "Receipt"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Receipt.v1",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "transaction_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "user_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "receipt_url": {
                      "type": "string",
                      "format": "uri",
                      "description": "Pre-signed url to download receipt image"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-receipts-receipt_id",
        "description": "",
        "security": [
          {
            "OAuth 2.0": [
              "receipts:read"
            ]
          }
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ]
    },
    "/reimbursements": {
      "get": {
        "summary": "List Reimbursements",
        "tags": [
          "Reimbursement"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "object",
                      "properties": {
                        "next": {
                          "type": "string",
                          "format": "uri"
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items":
                      {
                        "title": "Reimbursement.v1",
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "user_id": {
                            "type": "string",
                            "format": "uuid"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "amount": {
                            "type": "number"
                          },
                          "currency": {
                            "type": "string"
                          },
                          "transaction_date": {
                            "type": "string",
                            "format": "date"
                          },
                          "merchant": {
                            "type": "string"
                          },
                          "receipts": {
                            "type": "array",
                            "description": "Receipts listed in ascending order by their creation time, related to the reimbursement.",
                            "items": {
                              "type": "string",
                              "format": "uuid",
                              "minLength": 1
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          }
        },
        "operationId": "get-reimbursements",
        "parameters": [
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
          },
          {
            "name": "page_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number"
            },
            "description": "The number of results to be returned in each page. The value must be between 2 and 10,000. If not specified, the default will be 1,000."
          }
        ],
        "security": [
          {
            "OAuth 2.0": [
              "reimbursements:read"
            ]
          }
        ]
      }
    },
    "/reimbursements/{id}": {
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "summary": "Get details for one reimbursement",
        "tags": [
          "Reimbursement"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Reimbursement.v1",
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "user_id": {
                      "type": "string",
                      "format": "uuid"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "amount": {
                      "type": "number"
                    },
                    "currency": {
                      "type": "string"
                    },
                    "transaction_date": {
                      "type": "string",
                      "format": "date"
                    },
                    "merchant": {
                      "type": "string"
                    },
                    "receipts": {
                      "type": "array",
                      "description": "Receipts listed in ascending order by their creation time, related to the reimbursement.",
                      "items": {
                        "type": "string",
                        "format": "uuid",
                        "minLength": 1
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found"
          }
        },
        "operationId": "get-reimbursements-id",
        "security": [
          {
            "OAuth 2.0": [
              "reimbursements:read"
            ]
          }
        ]
      }
    },
    "/custom-id-provider/{entity_type}/custom-id-link": {
      "parameters": [
        {
          "name": "entity_type",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "post": {
        "summary": "Create custom id link",
        "operationId": "post-custom-id-provider-entity-type-custom-id-link",
        "responses": {
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "OAuth 2.0": []
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "custom_id": {
                    "type": "string"
                  },
                  "ramp_id": {
                    "type": "string",
                    "format": "uuid"
                  }
                }
              }
            }
          }
        },
        "description": "Create a mapping between custom\\_id and ramp\\_id under the namespace specified by entity\\_type.",
        "tags": [
          "Custom Id"
        ]
      }
    }
  },
  "components": {
    "schemas": {},
    "securitySchemes": {
      "OAuth 2.0": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "scopes": {
              "transactions:read": "",
              "cards:read": "",
              "cards:write": "",
              "card_programs:read": "",
              "card_programs:write": "",
              "users:read": "",
              "users:write": "",
              "locations:read": "",
              "locations:write": "",
              "departments:read": "",
              "departments:write": "",
              "business:read": "",
              "receipts:read": "",
              "reimbursements:read": ""
            },
            "tokenUrl": "https://api.ramp.com/v1/public/customer/token",
            "refreshUrl": "https://api.ramp.com/v1/public/customer/token",
            "authorizationUrl": "https://app.ramp.com/v1/authorize"
          },
          "clientCredentials": {
            "tokenUrl": "",
            "refreshUrl": "",
            "scopes": {}
          }
        }
      }
    },
    "responses": {
      "error-response": {
        "description": "Standard error response",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "error": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "details": {
                      "type": "object",
                      "description": "Extra metadata about the error, may be empty. Usually depends on the error type."
                    }
                  }
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "error": {
                    "message": "string",
                    "details": {}
                  }
                }
              }
            }
          }
        }
      },
      "task-response": {
        "description": "Response with the ID of a potentially long-running job. Task status can be checked via a GET call to `.../deferred/status/{task_id}`.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "description": "ID of the job started."
                }
              }
            },
            "examples": {
              "example-1": {
                "value": {
                  "id": "string"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "oauth-token-header": {
        "name": "Authorization",
        "in": "header",
        "schema": {
          "type": "string",
          "example": "Bearer x1x1x1x1x1x1x1x1x1x1"
        },
        "description": "The OAuth2 token header",
        "required": true
      },
      "path-param": {
        "name": "path param",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "pagination-param": {
        "name": "start",
        "in": "query",
        "required": false,
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "description": "The ID of the last entity of the previous page, used for pagination to get the next page."
      },
      "page-size-param": {
        "name": "page_size",
        "in": "query",
        "required": false,
        "schema": {
          "type": "number"
        },
        "description": "The number of results to be returned in each page. The value must be between 2 and 10,000. If not specified, the default will be 1,000."
      }
    },
    "examples": {}
  }
}
